@page "/movie"
@page "/movie/{id:int}"
@using FilmLibrary.Client.Services;
@inject IMovieService MovieService

@if (Id == null)
{
        <PageTitle>Add a new Movie</PageTitle>
            <h3>Add a new Movie</h3>
}
else
{
        <PageTitle>Edit @movie.Title</PageTitle>
        <h3>Edit @movie.Title</h3>
}

<EditForm Model="movie" OnValidSubmit="AddNewMovie">
    <div class="form-group">
        <label for="title">Title</label>
        <InputText id="title" @bind-Value="movie.Title" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="director">Director</label>
        <InputText id="director" @bind-Value="movie.Director" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="releaseYear">Release Year</label>
        <InputText id="releaseYear" @bind-Value="movie.ReleaseYear" class="form-control"></InputText>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteMovie">Delete Movie</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    Movie movie = new Movie { UserId = new UserRegister() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Movie" : "Update Movie";
        await MovieService.GetMovies();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            movie.UserId = MovieService.Users[0];
            movie.MovieId = movie.UserId.Id;
        }
        else
        {
            movie = await MovieService.GetSingleMovie((int)Id);
        }
    }

    async Task AddNewMovie()
    {
        if (Id == null)
        {
            await MovieService.CreateMovie(movie);
        }
        else
        {
            await MovieService.UpdateMovie(movie);
        }
    }

    async Task DeleteMovie()
    {
        await MovieService.DeleteMovie(movie.Id);
    }
}
